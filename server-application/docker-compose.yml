services:
  httpserver:
    ports:
      - "8000:8000"
    image: chatroom:latest
    volumes:
      - ./:/go/src/chatroom
    depends_on:
      - mongo
    environment:
      WAIT_HOSTS: mongo:27018
      MONGODB_URI: mongodb://mongo:27018
      ENV: local
      DD_TRACE_ENABLED: "false"
    networks:
      - backend

  mongo:
    networks:
      - backend
    image: mongo:latest
    environment:
      MONGO_INITDB_DATABASE: chatroom
    command: mongod --port 27018 --setParameter ttlMonitorSleepSecs=1
    ports:
      - "27018:27018"

  redis:
    networks:
      - backend
    image: 'bitnami/redis:latest'
    environment:
      - ALLOW_EMPTY_PASSWORD=yes
    ports:
      - "6379:6379"

  zookeeper:
    image: wurstmeister/zookeeper:3.4.6
    ports:
      - "2181:2181"
    networks:
      - backend

  kafka:
    image: wurstmeister/kafka:latest
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:9093,OUTSIDE://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_LISTENERS: INSIDE://0.0.0.0:9093,OUTSIDE://0.0.0.0:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - backend

networks:
  backend: